package aqbitig.gizehter.view;

import aqbitig.gizehter.controller.FileChooserInterface;
import aqbitig.gizehter.controller.InterfaceLogin;
import aqbitig.gizehter.controller.MyTreeModel;
import aqbitig.lib.basic.T;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JOptionPane;

/**
 * gizehter = giz(li) + anahtar
 *
 * @author aqdaycuklu
 */
public class Main extends javax.swing.JFrame {

    /* MY PROPERTIES */
    aqbitig.gizehter.controller.InterfaceLogin loginInterface;

    public static java.io.File file;
    public static String filePath;
    public static String mode = "";

    public static String password = "";

    private static int locationX = 0;
    private static int locationY = 0;

    private final aqbitig.gizehter.view.SplitPane splitPane = new aqbitig.gizehter.view.SplitPane();

    /**
     * Creates new form MainLayout
     */
    public Main() {
        initComponents();
        menu(false);

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        locationX = (dim.width / 2) - (getSize().width / 2);
        locationY = (dim.height / 2) - (getSize().height / 2);
        setLocation(locationX, locationY);
    }

    private void menu(boolean activate) {
        jMenuTree.setEnabled(activate);
        jMenuItemSave.setEnabled(activate);
        jMenuItemClose.setEnabled(activate);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemNew = new javax.swing.JMenuItem();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemClose = new javax.swing.JMenuItem();
        jSeparatorFile = new javax.swing.JPopupMenu.Separator();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuTree = new javax.swing.JMenu();
        jMenuItemAddBranch = new javax.swing.JMenuItem();
        jMenuItemAddLeaf = new javax.swing.JMenuItem();
        jMenuItemRemove = new javax.swing.JMenuItem();
        jMenuItemReload = new javax.swing.JMenuItem();
        jSeparatorTree = new javax.swing.JPopupMenu.Separator();
        jMenuItemClear = new javax.swing.JMenuItem();
        jMenuInfo = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();
        jMenuItemLicenses = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(locationX, locationY);
        setMinimumSize(new java.awt.Dimension(800, 300));
        setSize(new java.awt.Dimension(800, 300));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("\"O toprakta, Sen zindanda, Ben sürgün\"");
        getContentPane().add(jLabel1);

        jMenuFile.setText("File");

        jMenuItemNew.setText("New");
        jMenuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemNew);

        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpen);

        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSave);

        jMenuItemClose.setText("Close");
        jMenuItemClose.setMinimumSize(new java.awt.Dimension(500, 300));
        jMenuItemClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCloseActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemClose);
        jMenuFile.add(jSeparatorFile);

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuTree.setText("Tree");

        jMenuItemAddBranch.setText("Add Branch");
        jMenuItemAddBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddBranchActionPerformed(evt);
            }
        });
        jMenuTree.add(jMenuItemAddBranch);

        jMenuItemAddLeaf.setText("Add Leaf");
        jMenuItemAddLeaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddLeafActionPerformed(evt);
            }
        });
        jMenuTree.add(jMenuItemAddLeaf);

        jMenuItemRemove.setText("Remove");
        jMenuItemRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRemoveActionPerformed(evt);
            }
        });
        jMenuTree.add(jMenuItemRemove);

        jMenuItemReload.setText("Reload");
        jMenuItemReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReloadActionPerformed(evt);
            }
        });
        jMenuTree.add(jMenuItemReload);
        jMenuTree.add(jSeparatorTree);

        jMenuItemClear.setText("Clear");
        jMenuItemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemClearActionPerformed(evt);
            }
        });
        jMenuTree.add(jMenuItemClear);

        jMenuBar1.add(jMenuTree);

        jMenuInfo.setText("Info");

        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuInfo.add(jMenuItemAbout);

        jMenuItemLicenses.setText("Licenses");
        jMenuItemLicenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLicensesActionPerformed(evt);
            }
        });
        jMenuInfo.add(jMenuItemLicenses);

        jMenuBar1.add(jMenuInfo);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        // TODO add your handling code here:        

        getContentPane().removeAll();
        getContentPane().add(new aqbitig.gizehter.view.FileChooser("open", new FileChooserInterface() {
            @Override
            public void getFile(File f) {
                file = f;
                filePath = file.getPath();
                aqbitig.lib.io.FileManager.backup(filePath);
                mode = "open";
                menu(true);
                getContentPane().removeAll();
                getContentPane().add(new aqbitig.gizehter.view.Login(new InterfaceLogin() {
                    @Override
                    public void checkPassword(char[] password) {
                        T.o(password);
                        T.o(new String(password));
                        Main.password = new String(password);
                        if (!aqbitig.lib.db.AqbSqlite.checkPassword(Main.password)) {
                            JOptionPane.showMessageDialog(null, "Password not correct.");
                        } else {
                            getContentPane().removeAll();
                            getContentPane().add(splitPane);
                            ((MyTreeModel) splitPane.getjTree().getModel()).populateTree();
                            pack();
                        }
                    }
                }));
                pack();
            }
        }));
        pack();
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jMenuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewActionPerformed
        // TODO add your handling code here:

        getContentPane().removeAll();
        getContentPane().add(new aqbitig.gizehter.view.FileChooser("new", new FileChooserInterface() {
            @Override
            public void getFile(File f) {
                file = f;
                filePath = file.getPath();
                mode = "new";
                menu(true);
                getContentPane().removeAll();
                getContentPane().add(new aqbitig.gizehter.view.Login(new InterfaceLogin() {
                    @Override
                    public void checkPassword(char[] password) {
                        T.o(password);
                        T.o(new String(password));
                        Main.password = new String(password);
                        if (!aqbitig.lib.db.AqbSqlite.setPassword(Main.password)) {
                            JOptionPane.showMessageDialog(null, "Password not saved.");
                        } else {
                            getContentPane().removeAll();
                            getContentPane().add(splitPane);
                            pack();
                        }
                    }
                }));
                pack();
            }
        }));
        pack();
    }//GEN-LAST:event_jMenuItemNewActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        // TODO add your handling code here:
        ((MyTreeModel) splitPane.getjTree().getModel()).save();
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jMenuItemAddBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddBranchActionPerformed
        // TODO add your handling code here:
        ((MyTreeModel) splitPane.getjTree().getModel()).addBranch(splitPane.getjTree().getSelectionPath());
    }//GEN-LAST:event_jMenuItemAddBranchActionPerformed

    private void jMenuItemAddLeafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddLeafActionPerformed
        // TODO add your handling code here:
        ((MyTreeModel) splitPane.getjTree().getModel()).addLeaf(splitPane.getjTree().getSelectionPath());
    }//GEN-LAST:event_jMenuItemAddLeafActionPerformed

    private void jMenuItemRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRemoveActionPerformed
        // TODO add your handling code here:
        ((MyTreeModel) splitPane.getjTree().getModel()).remove(splitPane.getjTree().getSelectionPath());
    }//GEN-LAST:event_jMenuItemRemoveActionPerformed

    private void jMenuItemReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReloadActionPerformed
        // TODO add your handling code here:
        ((MyTreeModel) splitPane.getjTree().getModel()).reload();

    }//GEN-LAST:event_jMenuItemReloadActionPerformed

    private void jMenuItemCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCloseActionPerformed
        // TODO add your handling code here:
        ((MyTreeModel) splitPane.getjTree().getModel()).clear();
        ((Info) splitPane.getInfo()).clear();
        getContentPane().removeAll();
        getContentPane().add(jLabel1);
        menu(false);
        pack();
    }//GEN-LAST:event_jMenuItemCloseActionPerformed

    private void jMenuItemClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemClearActionPerformed
        // TODO add your handling code here:
        ((MyTreeModel) splitPane.getjTree().getModel()).clear();
    }//GEN-LAST:event_jMenuItemClearActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "AqBitig 2018\nhttps://www.aqbitig.de\naqdaycuklu@aqbitig.de");
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jMenuItemLicensesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLicensesActionPerformed
        // TODO add your handling code here:
        String licenses = "Used third party libs/software:\n\nSQLite JDBC\nhttps://bitbucket.org/xerial/sqlite-jdbc/";
        JOptionPane.showMessageDialog(null, licenses);

    }//GEN-LAST:event_jMenuItemLicensesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuInfo;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemAddBranch;
    private javax.swing.JMenuItem jMenuItemAddLeaf;
    private javax.swing.JMenuItem jMenuItemClear;
    private javax.swing.JMenuItem jMenuItemClose;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemLicenses;
    private javax.swing.JMenuItem jMenuItemNew;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemReload;
    private javax.swing.JMenuItem jMenuItemRemove;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenu jMenuTree;
    private javax.swing.JPopupMenu.Separator jSeparatorFile;
    private javax.swing.JPopupMenu.Separator jSeparatorTree;
    // End of variables declaration//GEN-END:variables

}
